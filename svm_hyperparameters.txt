svm hiperparametreleri:
class sklearn.svm.SVC(
    C=1.0, 
    kernel='rbf', 
    degree=3, 
    gamma='scale', 
    coef0=0.0, 
    shrinking=True, 
    probability=False, 
    tol=0.001, 
    cache_size=200, 
    class_weight=None, 
    verbose=False, 
    max_iter=-1, 
    decision_function_shape='ovr', 
    break_ties=False, 
    random_state=None
)

1) C=1.0

Açıklama: Yanlış sınıflandırmaları cezalandırma gücünü belirler. Daha küçük bir C değeri, daha fazla düzenleme uygular (overfitting’i önler); daha büyük bir C değeri, sınıflandırma hatalarını minimize etmeye odaklanır (daha esnek bir model).
Değerler: Pozitif bir float (örneğin, 0.1, 1, 10, 100).
Varsayılan: 1.0.

2) 'kernel': ['rbf']

Açıklama: Verileri dönüştürmek ve ayrılabilir hale getirmek için kullanılan çekirdek fonksiyonunu belirler.
Değerler:

    'linear': Lineer çekirdek (veriler lineer ayrılabilir olduğunda).
    'poly': Polinomal çekirdek (karmaşık sınırlar için).
    'rbf': Radial Basis Function çekirdeği (non-lineer ayrım için varsayılan).
    'sigmoid': Sigmoid çekirdek (sinir ağlarına benzer).

Varsayılan: 'rbf'.

3) gamma='scale'

Açıklama: RBF, polinomal ve sigmoid çekirdekler için katsayıdır. gamma değeri, tek bir veri noktasının etkisini belirler. Daha büyük bir gamma, modelin daha karmaşık hale gelmesine neden olabilir.
Değerler:

    'scale': Özellik sayısına göre otomatik ayarlanır (1 / (n_features)).
    'auto': Örnek sayısına göre otomatik ayarlanır (1 / (n_samples)).
    Pozitif bir float (örneğin, 0.01, 0.1, 1.0).

Varsayılan: 'scale'.

4) degree=3

Açıklama: Polinomal çekirdek (kernel='poly') kullanıldığında, polinomun derecesini belirler.
Değerler: Pozitif bir tamsayı (örneğin, 2, 3, 4).
Varsayılan: 3.
Not: Sadece kernel='poly' kullanıldığında geçerlidir.

5) coef0=0.0

Açıklama: Polinomal ve sigmoid çekirdekler için bağımsız terimi belirler. Daha büyük bir coef0, polinomal ve sigmoid fonksiyonlarının etkisini artırabilir.
Değerler: Float (örneğin, 0.0, 0.1, 1.0).
Varsayılan: 0.0.
Not: Sadece kernel='poly' ve kernel='sigmoid' için geçerlidir.

6) class_weight=None

Açıklama: Dengeli veya dengesiz veri setlerinde sınıflara ağırlık atamayı kontrol eder.
Değerler:

    'balanced': Sınıf ağırlıkları, veri dağılımına göre otomatik ayarlanır.
    {dict}: Belirli sınıflara özel ağırlıklar atanabilir (örneğin, {0: 1, 1: 2}).
    None: Ağırlık ataması yapılmaz.

Varsayılan: None.

7) shrinking=True

Açıklama: Hesaplama sırasında küçültme (shrinking heuristic) yönteminin kullanılıp kullanılmayacağını belirler. Shrinking, algoritmayı hızlandırabilir.
Değerler:

    True: Küçültme kullanılır.
    False: Küçültme kullanılmaz.

Varsayılan: True.

8) probability=False

Açıklama: Modelin sınıflandırma olasılıklarını hesaplayıp hesaplamayacağını kontrol eder. Olasılık hesaplaması, ek bir işlem maliyeti gerektirir.
Değerler:

    True: Olasılık hesaplanır.
    False: Olasılık hesaplanmaz.

Varsayılan: False.

9) tol=0.001

Açıklama: Optimizasyon algoritmasının durma kriteri. Daha küçük bir tol değeri, daha hassas bir çözüm sağlar ancak işlem süresini artırabilir.
Değerler: Pozitif bir float (örneğin, 1e-3, 1e-4).
Varsayılan: 1e-3.

10) max_iter=-1

Açıklama: Optimizasyon algoritmasının maksimum yineleme sayısını belirler. Yeterli sonuca ulaşılamadığında durma noktasını belirler.
Değerler:

    -1: Sınırsız iterasyon.
    Pozitif bir tamsayı (örneğin, 100, 1000).

Varsayılan: -1.




